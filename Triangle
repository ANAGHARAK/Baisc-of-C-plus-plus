class Solution {
public:
    int f(int i,int j,int n,vector<vector<int>>&a){
        if(i==n-1){
            return a[n-1][j];
        }
        int d=a[i][j]+f(i+1,j,n,a);
        int dg=a[i][j]+f(i+1,j+1,n,a);
        return min(d,dg);
    }
    int fdp(int i,int j,int n,vector<vector<int>>&a,vector<vector<int>> &dp){
        if(i==n-1){
            return a[n-1][j];
        }
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        int d=a[i][j]+fdp(i+1,j,n,a,dp);
        int dg=a[i][j]+fdp(i+1,j+1,n,a,dp);
        dp[i][j]= min(d,dg);
        return dp[i][j];
    }
    int ftab(int n,vector<vector<int>>& a){
        int dp[n][n];
        for(int j=0;j<n;j++){
            dp[n-1][j]=a[n-1][j];
        }
        for(int i=n-2;i>=0;i--){
            for(int j=i;j>=0;j--){
                int d=a[i][j]+dp[i+1][j];
                int dg=a[i][j]+dp[i+1][j+1];

                dp[i][j]=min(d,dg);
            }
        }
        return dp[0][0];
    }
    int minimumTotal(vector<vector<int>>& triangle) {
        int n=triangle.size();
        vector<vector<int>> dp(n,vector<int>(n,-1));

        // return f(0,0,n,triangle);
        // return fdp(0,0,n,triangle,dp);
        return ftab(n,triangle);
    }
};
