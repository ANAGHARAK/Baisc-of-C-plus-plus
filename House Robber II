class Solution {
public:

    long long  solve(vector<int>& nums){
        int n=nums.size();
        int prev1=nums[0];
        int prev2=0;
        int curr;
        if(nums.size()==1){
            return nums[0];
        }
        for(int i=1;i<n;i++){
            int pick=prev2+nums[i];
            int notPick=prev1+0;
            curr=max(pick,notPick);
            prev2=prev1;
            prev1=curr;
        }
        return curr;
    }
    int rob(vector<int>& nums) {
        int n=nums.size();
        if(nums.size()==1){
            return nums[0];
        }
        vector<int> temp1,temp2;
        for(int i=0;i<n;i++){
            if(i!=0){
                temp1.push_back(nums[i]);
            }
            if(i!=n-1){
                temp2.push_back(nums[i]);
            }
        }

        return max(solve(temp1),solve(temp2));
    }
};
