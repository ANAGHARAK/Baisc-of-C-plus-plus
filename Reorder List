class Solution {

public:
    
    ListNode *reverse(ListNode *head){
        ListNode *curr=head;
        ListNode *prev=NULL;
        ListNode *next=NULL;

        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    void merge(ListNode* L1,ListNode* L2){
        while(L2!=NULL){
            ListNode *next=L1->next;
            L1->next=L2;
            L1=L2;
            L2=next;
        }
    }
    void reorderList(ListNode* &head) {
        if(head==NULL || head->next==NULL){
            return;
        }
        ListNode* slow=head;
        ListNode* prev=head;
        ListNode* fast=head;
        while(fast!=NULL && fast->next!=NULL){
            prev=slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        prev->next=NULL;
        
        ListNode *L1=head;
        ListNode *L2=reverse(slow);
        merge(L1,L2);
    }
};
