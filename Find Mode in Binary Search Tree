/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root,int &currentValue,int &currCount,int &maxCount,vector<int> &result){
        if(root==NULL){
            return;
        }

        inorder(root->left,currentValue,currCount,maxCount,result);
        if(root->val==currentValue){
            currCount++;
        }
        else{
            currentValue=root->val;
            currCount=1;
        }
        if(currCount>maxCount){
            maxCount=currCount;
            result.clear();
            result.push_back(currentValue);
        }
        else if(currCount==maxCount){
            result.push_back(currentValue);
        }
        inorder(root->right,currentValue,currCount,maxCount,result);

    }
    vector<int> findMode(TreeNode* root) {
        vector<int> result;
        int currentValue=0;
        int currCount=0;
        int maxCount=0;
        inorder(root,currentValue,currCount,maxCount,result);
        return result;
    }
};
