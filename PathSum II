/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void solve(TreeNode* root, int targetSum,vector<vector<int>> &paths,vector<int> &curPath,int curSum){
        if(root==NULL){
            return;
        }
        curPath.push_back(root->val);
        if(root->left==NULL && root->right==NULL){
            if(targetSum==(curSum+root->val)){
                paths.push_back(curPath);
            }
            
        }
        solve(root->left,targetSum,paths,curPath,curSum+root->val);
        solve(root->right,targetSum,paths,curPath,curSum+root->val);
        curPath.pop_back();

    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> paths;
        vector<int> curPath;
        int curSum=0;
        solve(root, targetSum,paths,curPath,curSum);
        return paths;
    }
};
