class Solution {
public:
    bool ftab(int n, int k, vector<int> &a){
        vector<vector<bool>> dp(n,vector<bool>(k+1,0));
        for(int i=0;i<n;i++){
            dp[i][0]=true;
        }
        if(a[0]<=k) dp[0][a[0]]=true;
        for(int ind=1;ind<n;ind++){
            for(int target=1;target<=k;target++){
                bool notTake=dp[ind-1][target];
                bool take=false;
                if(target>=a[ind]){
                    take=dp[ind-1][target-a[ind]];
                }
                dp[ind][target]=take || notTake;
            }
        }
        return dp[n-1][k];
    }
    bool canPartition(vector<int>& nums) {
        int totalSum=0;
        for(int i=0;i<nums.size();i++){
            totalSum+=nums[i];
        }
        if(nums.size()==1){
            return false;
        }
        if(totalSum%2){
            return false;
        }
        int target=totalSum/2;
        if(ftab(nums.size(),target,nums)){
            return true;
        }
        else{
            return false;
        }
    }
};
