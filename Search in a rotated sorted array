class Solution {
public:
    int getPivot(vector<int>& nums){
        int n=nums.size();
        int s=0;
        int e=n-1;
        while(s<e){
            int mid=s+(e-s)/2;
            if(nums[mid]>=nums[0]){
                s=mid+1;
            }
            else{
                e=mid;
            }
        }
        return s;
    }
     int bsearch(vector<int>& nums, int target,int start,int end) {
        int s=start;
        int e=end;
        while(s<=e){
            int mid=(s+e)/2;
            if(nums[mid]==target){
                return mid;
            }
            else if(nums[mid]<target){
                s=mid+1;
            }
            else if(nums[mid]>target){
                e=mid-1;
            }
        }
        return -1;
    }
    int search(vector<int>& nums, int target) {
        int n=nums.size();
        int pivot=getPivot(nums);
        if(target>=nums[pivot] && target<=nums[n-1]){
            return bsearch(nums,target,pivot,n-1);
        }
        else{
            return bsearch(nums,target,0,pivot-1);
        }

        
    }
};
