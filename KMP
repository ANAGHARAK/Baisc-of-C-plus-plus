void computeLPSArray(string pattern,int M,vector<int> &lps){
	int len=0;
	int i=1;
	lps[0]=0;
	while(i<M){
		if(pattern[i]==pattern[len]){
			lps[i]=len+1;
			len+=1;
			i+=1;
		}
		else{
			if(len!=0){
				len=lps[len-1];
			}
			else{
				lps[i]=0;
				i=i+1;
			}
			
		}
	}
}

vector<int> stringMatch(string text, string pattern) {
	// Write your code here.
	int N=text.size();
	int M=pattern.size();

	vector<int> lps(M,0);
	vector<int> res;
	computeLPSArray(pattern,M,lps);
	int i=0,j=0;
	while((N - i) >= (M - j)){
		if(text[i]==pattern[j]){
			i=i+1;
			j=j+1;
		}
		else{
			if(i<N && j!=0){
				j=lps[j-1];
			}
			else{
				i=i+1;
			}
		}
		if(j==M){
			res.push_back(i-j+1);
			j=lps[j-1];
		}
	}
	return res;

	
}
