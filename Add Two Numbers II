/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        stack<int>st1;
        stack<int>st2;
        stack<int>final;
        
        while(l1){
            st1.push(l1->val);
            l1=l1->next;
        }
        while(l2){
            st2.push(l2->val);
            l2=l2->next;
        }
        int c=0;
        while(!st1.empty() || !st2.empty()){
            int temp=0;
            if(st1.size()){
                temp+=st1.top();
                st1.pop();
            }
            if(st2.size()){
                temp+=st2.top();
                st2.pop();
            }
            temp+=c;
            c=temp/10;
            temp=temp%10;
            final.push(temp);
        }
        if(c){
            final.push(c);
        }
        ListNode* head=new ListNode();
        ListNode* prev=head;
        while(final.size()){
           ListNode* curr=new ListNode(final.top());
           prev->next=curr;
           prev=prev->next;
           final.pop();
        }
        return head->next;


    }
};
