class Solution {
public:
    int firstOcc(vector<int>& nums, int target){
        int s=0;
        int e=nums.size()-1;
        int ans1=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]==target){
                ans1=mid;
                e=mid-1;
            }
            else if(nums[mid]<target){
                s=mid+1;
            }
            else if(nums[mid]>target){
                e=mid-1;
            }
        }
        return ans1;
    }
    int lastOcc(vector<int>& nums, int target){
        int s=0;
        int e=nums.size()-1;
        int ans2=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(nums[mid]==target){
                ans2=mid;
                s=mid+1;
            }
            else if(nums[mid]<target){
                s=mid+1;
            }
            else if(nums[mid]>target){
                e=mid-1;
            }
        }
        return ans2;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int n1=firstOcc(nums,target);
        int n2=lastOcc(nums,target);
        ans.push_back(n1);
        ans.push_back(n2);
        return ans;
    }
};
