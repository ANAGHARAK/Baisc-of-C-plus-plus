class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int i=0;
        int j=0;
        int k=0;
        vector<int> temp;
        while(i<nums1.size() && j<nums2.size()){
            if(nums1[i]<nums2[j]){
                temp.push_back(nums1[i]);
                k++;
                i++;
            }
            else{
                temp.push_back(nums2[j]);
                j++;
                k++;
            }
        }
        while(i<nums1.size()){
            temp.push_back(nums1[i]);
                k++;
                i++;
        }
        while(j<nums2.size()){
            temp.push_back(nums2[j]);
                k++;
                j++;
        }
        int n=k;
        if(n%2==0){
            int mid=(n-1)/2;
            double median=(double)(temp[mid]+temp[mid+1])/2;
            return median;
        }
        else{
            int mid=(n-1)/2;
            double median=temp[mid];
            return median;
        }

        
    }
};
